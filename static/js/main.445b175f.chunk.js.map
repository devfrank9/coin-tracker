{"version":3,"sources":["api.ts","routes/Coins.tsx","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Container","styled","div","Header","header","CoinsList","ul","Coin","h1","props","theme","bgColor","accentColor","Title","Loader","span","Img","img","Coins","useQuery","isLoading","data","Helmet","slice","map","coin","to","pathname","id","state","name","src","symbol","toLowerCase","Chart","coinId","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","type","series","price","close","options","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","xaxis","axisTicks","axisBorder","labels","categories","time_close","yaxis","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","Price","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","useParams","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","rank","quotes","USD","description","total_supply","max_supply","path","Router","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.445b175f.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","// eslint-disable-next-line\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoins } from \"../api\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 10px 10px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.h1`\n  background-color: white;\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in-out;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: \"string\";\n  name: \"string\";\n  symbol: \"string\";\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: \"string\";\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>\"Loading...\"</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\n\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading Chart...\"\n      ) : (\n        <ApexChart\n          type=\"line\"\n          series={[\n            {\n              name: \"price\",\n              data: data?.map((price) => price.close),\n            },\n          ]}\n          options={{\n            theme: { mode: \"dark\" },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: { show: false },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            stroke: { curve: \"smooth\", width: 5 },\n            xaxis: {\n              axisTicks: { show: false },\n              axisBorder: { show: false },\n              labels: { show: false },\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close),\n            },\n            yaxis: { show: false },\n            fill: {\n              type: \"gradient\",\n              gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n            },\n            colors: [\"#0fbcf9\"],\n            tooltip: {\n              y: { formatter: (value) => `$ ${value.toFixed(2)}` },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","function Price() {\n  return <h1>Price</h1>;\n}\n\nexport default Price;\n","// eslint-disable-next-line\nimport { useQuery } from \"react-query\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\nimport { Helmet } from \"react-helmet\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\n\ninterface RouteState {\n  name: string;\n}\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n\n  const loading = infoLoading || tickersLoading;\n\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>{tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coins from \"./routes/Coins\";\nimport Coin from \"./routes/Coin\";\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","// eslint-disable-next-line\nimport { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro&display=swap');\n  /* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration: none;\n  color: inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </>\n  );\n}\n\nexport default App;\n","// eslint-disable-next-line\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#44bd32\",\n};\n"],"sourceRoot":""}